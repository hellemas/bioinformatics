---
# title-block-banner: images/banner3.png
title-block-banner: "#003257"
title-block-banner-color: "#FFFFFF"
hide-hidden: true
---


<style>

/* #title-block-header {
  margin-block-end: 1rem;
  position: relative;
  margin-top: -1px;
  height: 100px;
  background-color: "#36B24A";
}

.quarto-title-banner {
  font-family:  Passata;
  margin-block-end: 1rem;
  position: relative;
  margin-top: -10px;
  height: 100%;
  background-color: "#36B24A";
} */
</style>


<!-- 
<style> 
* {
  font-family: Passata;
} 
</style>
 -->

<!-- 
**[Download the HTML course website for offline viewing at the exam](https://brightspace.au.dk/d2l/common/dialogs/quickLink/quickLink.d2l?ou={orgUnitId}&type=coursefile&fileId=course_page_html.zip) (unzip once downloaded and double-click index.html).**

**[Download the HTML Python documentation for offline viewing at the exam](https://brightspace.au.dk/d2l/common/dialogs/quickLink/quickLink.d2l?ou={orgUnitId}&type=coursefile&fileId=python-3.9.21-docs-html.zip) (unzip once downloaded and double-click index.html).**
 -->


```{mermaid}
flowchart LR
  A[Hard edge] --> B(Round edge)
  B --> C{Decision}
  C --> D[Result one]
  C --> E[Result two]
```

# Welcome {.unnumbered}

[brightspace_2024]: (https://brightspace.au.dk/d2l/home/145685)

This is the homepage for the AU course Bioinformatics and programming (Bioinformatik og programmering). You will find all course content here. The [Brightspace course page][brightspace_2024] is only used for communication, and assignments.

## Course description {.unnumbered}
After the course, the participants will have basic knowledge of computer methods and applications for analyzing biological sequence data and insight into principles and techniques for constructing simple programs. Participants will acquire practical experience with analyzing problems in bioinformatics and related fields and implementing programs to solve such problems using the Python programming language.

The participants must, at the end of the course, be able to:

* Apply fundamental constructs of a programming language.
* Analyse data and construct data structures for the representation of data.
* Analyse simple computational problems and construct programs for their solution.
* Describe and relate essential methods in bioinformatics analysis.
* Apply bioinformatics software to biological data.
* Judge the reliability of results obtained using Bioinformatics software.

## Course contents {.unnumbered}
The course introduces programming and its practical applications in bioinformatics. The course also outlines and discusses bioinformatics algorithms, and the most common tools for bioinformatics analysis of sequence data are presented and demo
nstrated. The participant will acquire and train basic programming skills during the first seven weeks. The last seven weeks introduce key topics in bioinformatics, focusing on applying bioinformatical software and developing programming skills. Subjects for lectures and exercises include bioinformatics databases, sequence alignment, genome annotation, sequence evolution, and phylogenetic analysis.


::: {.content-visible when-format="html"}


# Curriculum {.unnumbered}

The curriculum for programming is the lecture notes on these pages (a PDF version is available by clicking the PDF icon in the top left corner). I will develop my own lecture notes and add them to this page as the course progress.

<!-- THE REST IS HIDDEN -->
::: {.content-hidden when-meta="hide-hidden"}

Bioinformatics is a rapidly developing field, so textbooks often have parts that need updating. So, in this course, the curriculum for bioinformatics is put together from several sources. We use the best excerpts from the textbooks Understanding Bioinformatics by Jeremy Baum and Marketa J. Zvelebil, Biological Sequence Analysis by Richard Durbin et al., and Exploring Bioinformatics by Caroline St. Clair and Jonathan E. Visick. I have collected the sections from each textbook in separate compendia. You will also be reading short, up-to-date publications on selected topics in bioinformatics. 

Below are links to material covering the bioinformatics topics we treat in the course. In the weekly notes, you can see what you need to read to prepare for each lecture. You can also find any curriculum related to the exercises in the weekly note.

Compendia you can download here:

- [Compendium of selections from Understanding Bioinformatics](https://brightspace.au.dk/d2l/common/dialogs/quickLink/quickLink.d2l?ou=145685&type=coursefile&fileId=UnderstandingBioinformatics.pdf)
- [Compendium of selections from Biological Sequence Analysis](https://brightspace.au.dk/d2l/common/dialogs/quickLink/quickLink.d2l?ou=145685&type=coursefile&fileId=BiologicalSequenceAnalysis.pdf)
- [Compendium of selections from Exploring Bioinformatics](https://brightspace.au.dk/d2l/common/dialogs/quickLink/quickLink.d2l?ou=145685&type=coursefile&fileId=ExploringBioinformatics.pdf)

Links to material you need to download yourself (you may need to be on campus or use your student VPN to download from publisher websites):

- [Chapter 11: Genome-Wide Association Studies](https://journals.plos.org/ploscompbiol/article?id=10.1371/journal.pcbi.1002822)
- [Benefits and limitations of genome-wide association studies](https://www.nature.com/articles/s41576-019-0127-1)
- [The Theory and Practice of Genome Sequence Assembly](https://www.annualreviews.org/doi/10.1146/annurev-genom-090314-050032)
- [Alignment methods: strategies, challenges, benchmarking, and comparative overview](https://brightspace.au.dk/d2l/common/dialogs/quickLink/quickLink.d2l?ou=145685&type=coursefile&fileId=AlignmentMethods.pdf)
- [Bioinformatics explained: BLAST (CLCbio)](https://brightspace.au.dk/d2l/common/dialogs/quickLink/quickLink.d2l?ou=145685&type=coursefile&fileId=CLC_Bioinformatics_explained_BLAST.pdf)
- [Automatic generation of gene finders for Eukaryotic species](https://bmcbioinformatics.biomedcentral.com/articles/10.1186/1471-2105-7-263)

Curriculum on webpages (not PDF format):

[Using neural nets to recognize handwritten digits](https://neuralnetworksanddeeplearning.com/chap1.html) (if you have trouble accessing the page, download [this zip file](https://brightspace.au.dk/d2l/common/dialogs/quickLink/quickLink.d2l?ou=145685&type=coursefile&fileId=Neural+networks.zip) with the HTML content, unzip it, and view it locally).

:::


# Schedule {.unnumbered}

## Week 1 {.unnumbered}

##### Reading:  

  - Lecture notes: chapter @sec-preface
  - Lecture notes: chapter @sec-before_you_begin
  - Lecture notes: chapter @sec-bsf
  - Lecture notes: chapter @sec-helloworld
  - Lecture notes: chapter @sec-values
  - Lecture notes: chapter @sec-precedence
  - Lecture notes: chapter @sec-coursetools

Make sure you have installed Python and VScode for the first lecture.

##### Lectures:  

- In the first lecture, I will outline how the course is organized and how you will get the most out of your efforts in learning programming.
- In the first lecture, I will also talk about how a Python program works and about values, math, and logic.
- In the second lecture, I will talk about variables, operators, substitution, and reduction.

##### Exercises: 

If you have yet to do so at home, you will install Python and the text editor. To do this, follow the instructions in @sec-before_you_begin. Then, start doing the exercises in chapter @sec-helloworld, chapter @sec-values, and chapter @sec-precedence. You will also have time to do these exercises in the TA session of week two, so go slow. It is important to properly absorb the basic concepts at the beginning of the course; otherwise, it will become too difficult later on. Have a look 

And make sure to familiarize yourself with the Myiagi game and the print-steps tool described in chapter @sec-coursetools. These are useful companions in the course.


## Week 2 {.unnumbered}

##### Reading: 

  - Lecture notes: chapter @sec-controlflow
  - Lecture notes: chapter @sec-functions
  
I will cover chapters 8-9 in the lecture notes.

##### Lectures: 

- In the first lecture, I will talk about how to use logic to control which statements in your program that get executed.
- In the first lecture, I will also talk about how you can efficiently organize your code using functions.
- In the second lecture, I will talk more about functions.

##### Exercises:  

The topics for this week's exercises are statements, variables, operators, expressions, substitution, reduction, and logic. You will work on the rest of the exercises in chapter @sec-helloworld, chapter @sec-values, chapter @sec-precedence, and chapter @sec-coursetools. Do what you can at home and do the rest at the TA session.


## Week 3 {.unnumbered}

##### Reading:

- Lecture notes: chapter @sec-objects
- Lecture notes: chapter @sec-lists
- Lecture notes: chapter @sec-dictionaries
- Lecture notes: chapter @sec-tuples

##### Lectures:  

- In the first lecture, I will talk about objects and methods. 
- In the first lecture, I will also talk about lists.
- In the second lecture, I will talk about dictionaries and a bit about tuples.

##### Exercises:  

The topics for this week's exercises are if, else, logic, and functions. You are meant to complete all the exercises in chapter @sec-controlflow and chapter @sec-functions. Do what you can at home and do the rest at the TA session.


### Week 4 {.unnumbered}

##### Reading:

- Lecture notes: chapter @sec-iteration
- Lecture notes: chapter @sec-files

##### Lectures:  

- In the first lecture, I will talk about iteration and lists.
- In the second lecture, I will talk about how your code can interact with files on your computer.

##### Exercises:  

::: {.callout-note}
Only MO and Bio classes attend the exercises this week. MM classes do not. The exercise is repeated next week for the MM classes to attend*
:::

The topics for this week are objects, methods, strings, lists, tuples, and dictionaries. You are meant to complete all the exercises in chapters @sec-objects, @sec-lists, @sec-dictionaries, and @sec-tuples. Do what you can at home and do the rest at the TA session.





<!-- THE REST IS HIDDEN -->
::: {.content-hidden when-meta="hide-hidden"}

### Week 5 {.unnumbered}

##### Reading:

- Lecture notes: chapter @sec-datastructures
- Lecture notes: chapter @sec-recursion
- Lecture notes: chapter @sec-testing_your_code
- [Chapter 11: Genomewide Association Studies](https://journals.plos.org/ploscompbiol/article?id=10.1371/journal.pcbi.1002822)
- [Benefits and limitations of genomewide association studies](https://www.nature.com/articles/s41576-019-0127-1)

##### Lectures:  

- In the first lecture, I will talk about databases, genotyping arrays, and genomewide association studies (GWAS).
- In the first lecture, I will also talk about building simple data strutures in Python.
- In the second lecture, I will talk about how to use recursion in Python.

##### Exercises:  

::: {.callout-note}
Only MM classes attend the exercises this week. MO and Bio classes do not. The exercise is repeated from last week*.
:::

The topics for this week are iteration and data structures. You are meant to complete all the exercises in chapter @sec-iteration and chapter @sec-files.


### Week 6 {.unnumbered}

##### Reading:

- Lecture notes: chapter @sec-translationproject
- Understanding Bioinformatics 127-141

##### Lectures:  

- In the first lecture, I will talk about global pairwise alignment In the first lecture
- In the first lecture, I will also talk about the weekly programming project. 
- In the second lecture, I will talk about local pairwise alignment and more realistic gap scoring.

##### Exercises:  

- The programming project described in chapter @sec-translationproject.

From the [project files](supplementary/project_files.qmd) page, you can download the files you need for programming projects. There will be lots of work, so do what you can at home and do the rest at the TA session.

::: {.callout-important}
Chapter @sec-translationproject is a mandatory assignment. The deadline for handing it in (on Brightspace) is the night before your exercise class in week 41.
:::


### Week 7 {.unnumbered}

##### Reading:  

- Lecture notes: chapter @sec-foldingproject
- Understanding Bioinformatics: 117-127
- Alignment methods: strategies, challenges, benchmarking, and comparative overview (don't do the exercises).

##### Lectures:  

- In the first lecture, I will talk about protein substitution matrices and how to score protein alignments. - In the first lecture, I will also talk Python classes and the weekly programming project.
- In the second lecture, I will talk about multiple alignment.

##### Exercises:  

- The web exercise: [GWAS candidates](chapters/web/gwas_databases/index.qmd)
- The programming project described in chapter @sec-foldingproject (not a mandatory assignment).

From the [project files](supplementary/project_files.qmd) page, you can download the files you need for both programming projects and web exercises. There will be lots of work, so do what you can at home and do the rest at the TA session.


### Week 8 {.unnumbered}

##### Reading:  

- Lecture notes: chapter @sec-alignmentproject
- Bioinformatics Explained: BLAST
- Biological Sequence Analysis pp. 192-197

##### Lectures:  

- In the first lecture, I will talk about how to search for matches in a sequence database and how to asses alignment significance.
- In the first lecture, I will also talk about programming topics and the weekly programming project.
- In the second lecture, I will talk about models of DNA evolution and how to measure evolutionary distance between sequences.

##### Exercises:  

- The web exercise: [CCR5-delta32](chapters/web/ccr5_pwalign/index.qmd)
- The programming project described in chapter @sec-alignmentproject (not a mandatory assignment).

From the [project files](supplementary/project_files.qmd) page, you can download the files you need for both programming projects and web exercises. There will be lots of work, so do what you can at home and do the rest at the TA session.


### Week 9 {.unnumbered}

##### Reading:  

- Lecture notes: chapter @sec-codonbiasproject
- Biological Sequence Analysis pp. 165-179  <!-- UPGMA / NJ -->

##### Lectures:  

- In the first lecture, I will talk about methods for sequence clustering. 
- In the first lecture, I will also talk about the programming project.
- In the second lecture, I will talk about bioinformatics code libraries for Python, such as BioPython, and the Master in Bioinformatics that we offer at the Bioinformatics Centre.

##### Exercises:  

- The web exercise: [MRSA](chapters/web/mrsa_blast_multalign/index.qmd)
- The programming project described in chapter @sec-codonbiasproject (not a mandatory assignment).

From the [project files](supplementary/project_files.qmd) page, you can download the files you need for both programming projects and web exercises. There will be lots of work, so do what you can at home and do the rest at the TA session.


### Week 10 {.unnumbered}

##### Reading:  

- Lecture notes: chapter @sec-hivproject
- Biological Sequence Analysis pp. 192-202 <!-- phylogeny / felsenstein -->

##### Lectures:  

- In the first lecture, I will talk about phylogenetic trees.
- In the first lecture, I will also talk about Python topics and the weekly programming project.
- In the second lecture, I will talk about gene prediction in prokaryotes.

##### Exercises:  

- The web exercise: [Aardvark?](chapters/web/aardwark_seqdist/index.qmd)
- The programming project described in chapter @sec-hivproject.

From the [project files](supplementary/project_files.qmd) page, you can download the files you need for both programming projects and web exercises. There will be lots of work, so do what you can at home and do the rest at the TA session.

::: {.callout-important}
Chapter @sec-hivproject is a mandatory assignment. The deadline for handing it in is the night before your exercise class in week 46.
:::


### Week 11 {.unnumbered}

##### Reading:  

- Lecture notes: chapter @sec-seqdistproject
- Biological Sequence Analysis pp. 46-66 <!-- HMMs -->

##### Lectures:

- In the first lecture, I will talk about hidden Markov models (HMMs).
- In the first lecture, I will also talk about python topics and the weekly programming project.
- In the second lecture, I will talk about more about HMMs

##### Exercises:  

- The programming project described in chapter @sec-seqdistproject (not a mandatory assignment).

From the [project files](supplementary/project_files.qmd) page, you can download the files you need for both programming projects and web exercises. There will be lots of work, so do what you can at home and do the rest at the TA session.


### Week 12 {.unnumbered}

##### Reading:  

- Lecture notes: chapter @sec-orfproject
- Understanding Bioinformatics pp. 438-448 <!--protein prediction -->
- [Automatic generation of gene finders for Eukaryotic species](https://bmcbioinformatics.biomedcentral.com/articles/10.1186/1471-2105-7-263)
- [The Theory and Practice of Genome Sequence Assembly](https://www.annualreviews.org/doi/10.1146/annurev-genom-090314-050032) <!-- genome assembly -->

##### Lectures

- In the first lecture, I will talk about applications of hidden Markov models gene finding and protein annotation.
- In the first lecture, I will also talk about Python topics and the weekly programming project.
- In the second lecture, I will talk genome assembly.

##### Exercises:  

- The web exercise: [Plasmid ORFs](chapters/web/orf_finding/index.qmd)
- The programming project described in chapter @sec-orfproject (not a mandatory assignment).


From the [project files](supplementary/project_files.qmd) page, you can download the files you need for both programming projects and web exercises. There will be lots of work, so do what you can at home and do the rest at the TA session.


### Week 13 {.unnumbered}

##### Reading:  

- Lecture notes: chapter @sec-assemblyproject
- Understanding Bioinformatics pp. 494-496  <!-- Neural networks -->
- ~~Exploring Bioinformatics pp. 242-248~~  <!-- RNA structure -->

##### Lectures:

- In the first lecture, I will talk about neural networks
- In the first lecture, I will also talk about the programming project.
- In the second lecture, I will talk about applications of HMMs ~~RNA secondary structure prediction~~.

##### Exercises:  

- The web exercise: [Read mapping](chapters/web/long_reads/index.qmd)
- The programming project described in chapter @sec-assemblyproject (not a mandatory assignment).

From the [project files](supplementary/project_files.qmd) page, you can download the files you need for both programming projects and web exercises. There will be lots of work, so do what you can at home and do the rest at the TA session.


### Week 14 {.unnumbered}

##### Reading:  

- None this week.

##### Lectures:  

<!-- TODO: Add toic for lecture in week 14 -->
- In the first lecture, I will talk about python and algorithms. You will also hear a guest talk by about bioinformatics outside the class room.
- In the last lecture, we will evaluate the course and review the exam's practicalities.

##### Exercises:  

- The web exercise: [Neural networks](chapters/web/neural_networks/index.qmd)

From the [project files](supplementary/project_files.qmd) page, you can download the files you need for both programming projects and web exercises. There will be lots of work, so do what you can at home and do the rest at the TA session.

<!-- unplanned weeks hidden -->
:::

<!-- not in html -->
:::